"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.programGateGuardManifest = void 0;
const serializers_1 = require("@metaplex-foundation/umi/serializers");
const errors_1 = require("../errors");
const generated_1 = require("../generated");
const guards_1 = require("../guards");
/**
 * The programGate guard restricts the programs that can be invoked within
 * the mint transaction. It allows the necessary programs for the mint
 * instruction to work and any other program specified in the configuration.
 *
 * The `additional` argument allows you to specify additional programs
 * that can be invoked in a mint transaction.
 * These programs are in addition to the mandatory programs that
 * are required for the mint instruction to work. Providing an empty
 * array is equivalent to only authorising the mandatory programs.
 *
 * The mandatory programs are:
 * - The SPL System Program
 * - The SPL Token Program
 * - The SPL Associated Token Program
 * - The SPL Compute Budget Program
 * - The MPL Candy Machine Core Program
 * - The MPL Candy Guard Program
 * - The MPL System Extras Program
 */
exports.programGateGuardManifest = {
    name: 'programGate',
    serializer: () => (0, serializers_1.mapSerializer)((0, serializers_1.fixSerializer)((0, generated_1.getProgramGateSerializer)(), 4 + 32 * 5), (value) => {
        if (value.additional.length > 5) {
            throw new errors_1.MaximumOfFiveAdditionalProgramsError();
        }
        return value;
    }),
    mintParser: guards_1.noopParser,
    routeParser: guards_1.noopParser,
};
//# sourceMappingURL=programGate.js.map