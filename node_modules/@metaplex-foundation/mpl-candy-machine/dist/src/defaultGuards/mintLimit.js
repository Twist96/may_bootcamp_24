"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mintLimitGuardManifest = void 0;
const generated_1 = require("../generated");
const guards_1 = require("../guards");
/**
 * The mintLimit guard allows to specify a limit on the
 * number of mints for each individual wallet.
 *
 * The limit is set per wallet, per candy machine and per
 * identified (provided in the settings) to allow multiple
 * mint limits within a Candy Machine. This is particularly
 * useful when using groups of guards and we want each of them
 * to have a different mint limit.
 */
exports.mintLimitGuardManifest = {
    name: 'mintLimit',
    serializer: generated_1.getMintLimitSerializer,
    mintParser: (context, mintContext, args) => ({
        data: new Uint8Array(),
        remainingAccounts: [
            {
                publicKey: (0, generated_1.findMintCounterPda)(context, {
                    id: args.id,
                    user: mintContext.minter.publicKey,
                    candyMachine: mintContext.candyMachine,
                    candyGuard: mintContext.candyGuard,
                })[0],
                isWritable: true,
            },
        ],
    }),
    routeParser: guards_1.noopParser,
};
//# sourceMappingURL=mintLimit.js.map