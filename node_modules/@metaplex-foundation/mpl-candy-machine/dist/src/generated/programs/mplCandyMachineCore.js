"use strict";
/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getMplCandyMachineCoreProgramId = exports.getMplCandyMachineCoreProgram = exports.createMplCandyMachineCoreProgram = exports.MPL_CANDY_MACHINE_CORE_PROGRAM_ID = void 0;
const errors_1 = require("../errors");
exports.MPL_CANDY_MACHINE_CORE_PROGRAM_ID = 'CndyV3LdqHUfDLmE5naZjVN8rBZz4tqhdefbAnjHG3JR';
function createMplCandyMachineCoreProgram() {
    return {
        name: 'mplCandyMachineCore',
        publicKey: exports.MPL_CANDY_MACHINE_CORE_PROGRAM_ID,
        getErrorFromCode(code, cause) {
            return (0, errors_1.getMplCandyMachineCoreErrorFromCode)(code, this, cause);
        },
        getErrorFromName(name, cause) {
            return (0, errors_1.getMplCandyMachineCoreErrorFromName)(name, this, cause);
        },
        isOnCluster() {
            return true;
        },
    };
}
exports.createMplCandyMachineCoreProgram = createMplCandyMachineCoreProgram;
function getMplCandyMachineCoreProgram(context, clusterFilter) {
    return context.programs.get('mplCandyMachineCore', clusterFilter);
}
exports.getMplCandyMachineCoreProgram = getMplCandyMachineCoreProgram;
function getMplCandyMachineCoreProgramId(context, clusterFilter) {
    return context.programs.getPublicKey('mplCandyMachineCore', exports.MPL_CANDY_MACHINE_CORE_PROGRAM_ID, clusterFilter);
}
exports.getMplCandyMachineCoreProgramId = getMplCandyMachineCoreProgramId;
//# sourceMappingURL=mplCandyMachineCore.js.map