import { TokenStandard } from '@metaplex-foundation/mpl-token-metadata';
import { PublicKey } from '@metaplex-foundation/umi';
import { NftBurn, NftBurnArgs } from '../generated';
import { GuardManifest } from '../guards';
/**
 * The nftBurn guard restricts the mint to holders of a predefined
 * NFT Collection and burns the holder's NFT when minting.
 *
 * This means the mint address of the NFT to burn must be
 * passed when minting. This guard alone does not limit how many
 * times a holder can mint. A holder can mint as many times
 * as they have NFTs from the required collection to burn.
 */
export declare const nftBurnGuardManifest: GuardManifest<NftBurnArgs, NftBurn, NftBurnMintArgs>;
export declare type NftBurnMintArgs = NftBurnArgs & {
    /**
     * The mint address of the NFT to burn.
     * This must be part of the required collection and must
     * belong to the payer.
     */
    mint: PublicKey;
    /**
     * The token standard of the NFT to burn.
     */
    tokenStandard: TokenStandard;
    /**
     * The token account linking the NFT with its owner.
     *
     * @defaultValue
     * Defaults to the associated token address using the
     * mint address of the NFT and the payer's address.
     */
    tokenAccount?: PublicKey;
};
