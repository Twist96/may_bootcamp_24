import { AccountMeta, Context, Option, OptionOrNullable, Signer } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
import { GuardInstructionExtras, GuardRemainingAccount, MintContext, RouteContext } from './guardManifest';
import { CandyGuardProgram, GuardRepository } from './guardRepository';
export declare type GuardSetArgs = {
    [name: string]: OptionOrNullable<object>;
};
export declare type GuardSet = {
    [name: string]: Option<object>;
};
export declare type GuardSetMintArgs = {
    [name: string]: OptionOrNullable<object>;
};
export declare type GuardSetRouteArgs = {
    [name: string]: object;
};
export declare function getGuardSetSerializer<DA extends GuardSetArgs, D extends DA & GuardSet>(context: {
    guards: GuardRepository;
}, program: CandyGuardProgram): Serializer<Partial<DA>, D>;
export declare function parseMintArgs<MA extends GuardSetMintArgs>(context: Pick<Context, 'eddsa' | 'programs'> & {
    guards: GuardRepository;
}, program: CandyGuardProgram, mintContext: MintContext, mintArgs: Partial<MA>): GuardInstructionExtras;
export declare function parseRouteArgs<G extends keyof RA & string, RA extends GuardSetRouteArgs>(context: Pick<Context, 'eddsa' | 'programs'> & {
    guards: GuardRepository;
}, program: CandyGuardProgram, routeContext: RouteContext, guard: G, routeArgs: RA[G]): GuardInstructionExtras & {
    guardIndex: number;
};
export declare function parseGuardRemainingAccounts(remainingAccounts: GuardRemainingAccount[]): [AccountMeta[], Signer[]];
