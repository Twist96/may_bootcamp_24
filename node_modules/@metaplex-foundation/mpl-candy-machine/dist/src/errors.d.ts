import { UmiError } from '@metaplex-foundation/umi';
export declare class CandyMachineError extends UmiError {
    readonly name: string;
    constructor(message: string, cause?: Error);
}
export declare class VariableSizeGuardError extends CandyMachineError {
    readonly name: string;
    constructor(name: string);
}
export declare class UnregisteredCandyGuardError extends CandyMachineError {
    readonly name: string;
    constructor(name: string);
}
export declare class GuardGroupRequiredError extends CandyMachineError {
    readonly name: string;
    constructor(availableGroups: string[]);
}
export declare class SelectedGuardGroupDoesNotExistError extends CandyMachineError {
    readonly name: string;
    constructor(selectedGroup: string, availableGroups: string[]);
}
export declare class GuardMintSettingsMissingError extends CandyMachineError {
    readonly name: string;
    constructor(guardName: string);
}
export declare class GuardRouteNotSupportedError extends CandyMachineError {
    readonly name: string;
    constructor(guardName: string);
}
export declare class CandyGuardRequiredOnCandyMachineError extends CandyMachineError {
    readonly name: string;
    constructor();
}
export declare class GuardNotEnabledError extends CandyMachineError {
    readonly name: string;
    constructor(guard: string, group: string | null);
}
export declare class GuardGroupLabelTooLongError extends CandyMachineError {
    readonly name: string;
    constructor(label: string);
}
export declare class UnrecognizePathForRouteInstructionError extends CandyMachineError {
    readonly name: string;
    constructor(guard: string, path: never);
}
export declare class MintOwnerMustBeMintPayerError extends CandyMachineError {
    readonly name: string;
    constructor(guard: string);
}
export declare class MaximumOfFiveAdditionalProgramsError extends CandyMachineError {
    readonly name: string;
    constructor();
}
