import { Account, Context, Pda, PublicKey, RpcAccount, RpcGetAccountOptions, RpcGetAccountsOptions } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
import { DefaultGuardSet, DefaultGuardSetArgs } from '../defaultGuards';
import { findCandyGuardPda } from '../generated/accounts/candyGuard';
import { CandyGuardProgram, GuardRepository, GuardSet, GuardSetArgs } from '../guards';
import { CandyGuardData, CandyGuardDataArgs } from './candyGuardData';
export { findCandyGuardPda };
export declare type CandyGuard<D extends GuardSet = DefaultGuardSet> = Account<CandyGuardAccountData<D>>;
export declare type CandyGuardAccountData<D extends GuardSet = DefaultGuardSet> = {
    discriminator: Array<number>;
    base: PublicKey;
    bump: number;
    authority: PublicKey;
} & CandyGuardData<D>;
export declare type CandyGuardAccountDataArgs<DA extends GuardSetArgs = DefaultGuardSetArgs> = {
    base: PublicKey;
    bump: number;
    authority: PublicKey;
} & CandyGuardDataArgs<DA>;
export declare function getCandyGuardAccountDataSerializer<DA extends GuardSetArgs, D extends DA & GuardSet>(context: Pick<Context, 'programs'> & {
    guards: GuardRepository;
}, program?: CandyGuardProgram): Serializer<CandyGuardAccountDataArgs<DA>, CandyGuardAccountData<D>>;
export declare function deserializeCandyGuard<D extends GuardSet = DefaultGuardSet>(context: Pick<Context, 'programs'> & {
    guards: GuardRepository;
}, rawAccount: RpcAccount, program?: CandyGuardProgram): CandyGuard<D>;
export declare function fetchCandyGuard<D extends GuardSet = DefaultGuardSet>(context: Pick<Context, 'programs' | 'rpc'> & {
    guards: GuardRepository;
}, publicKey: PublicKey | Pda, options?: RpcGetAccountOptions, program?: CandyGuardProgram): Promise<CandyGuard<D>>;
export declare function safeFetchCandyGuard<D extends GuardSet = DefaultGuardSet>(context: Pick<Context, 'programs' | 'rpc'> & {
    guards: GuardRepository;
}, publicKey: PublicKey | Pda, options?: RpcGetAccountOptions, program?: CandyGuardProgram): Promise<CandyGuard<D> | null>;
export declare function fetchAllCandyGuard<D extends GuardSet = DefaultGuardSet>(context: Pick<Context, 'programs' | 'rpc'> & {
    guards: GuardRepository;
}, publicKeys: (PublicKey | Pda)[], options?: RpcGetAccountsOptions, program?: CandyGuardProgram): Promise<CandyGuard<D>[]>;
export declare function safeFetchAllCandyGuard<D extends GuardSet = DefaultGuardSet>(context: Pick<Context, 'programs' | 'rpc'> & {
    guards: GuardRepository;
}, publicKeys: (PublicKey | Pda)[], options?: RpcGetAccountsOptions, program?: CandyGuardProgram): Promise<CandyGuard<D>[]>;
export declare function getCandyGuardGpaBuilder<D extends GuardSet = DefaultGuardSet>(context: Pick<Context, 'programs' | 'rpc'> & {
    guards: GuardRepository;
}, program?: CandyGuardProgram): import("@metaplex-foundation/umi").GpaBuilder<CandyGuard<D>, {
    discriminator: Array<number>;
    base: PublicKey;
    bump: number;
    authority: PublicKey;
}>;
