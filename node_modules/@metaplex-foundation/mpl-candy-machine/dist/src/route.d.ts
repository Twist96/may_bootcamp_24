import { Option, OptionOrNullable, TransactionBuilder } from '@metaplex-foundation/umi';
import { DefaultGuardSetRouteArgs } from './defaultGuards';
import { route as baseRoute, RouteInstructionAccounts } from './generated/instructions/route';
import { GuardRepository, GuardSetRouteArgs } from './guards';
export { RouteInstructionAccounts };
export declare type RouteInstructionData<G extends keyof RA & string, RA extends GuardSetRouteArgs> = {
    discriminator: Array<number>;
    guard: G;
    routeArgs: RA[G];
    group: Option<string>;
};
export declare type RouteInstructionDataArgs<G extends keyof RA & string, RA extends GuardSetRouteArgs> = {
    guard: G;
    routeArgs: RA[G];
    group?: OptionOrNullable<string>;
};
export declare function route<G extends keyof RA & string, RA extends GuardSetRouteArgs = DefaultGuardSetRouteArgs>(context: Parameters<typeof baseRoute>[0] & {
    guards: GuardRepository;
}, input: RouteInstructionAccounts & RouteInstructionDataArgs<G, RA extends undefined ? DefaultGuardSetRouteArgs : RA>): TransactionBuilder;
