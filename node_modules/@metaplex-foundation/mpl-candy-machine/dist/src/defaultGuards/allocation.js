"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.allocationGuardManifest = void 0;
const mpl_toolbox_1 = require("@metaplex-foundation/mpl-toolbox");
const generated_1 = require("../generated");
/**
 * Guard to specify the maximum number of mints in a guard set.
 *
 */
exports.allocationGuardManifest = {
    name: 'allocation',
    serializer: generated_1.getAllocationSerializer,
    mintParser: (context, mintContext, args) => ({
        data: new Uint8Array(),
        remainingAccounts: [
            {
                publicKey: (0, generated_1.findAllocationTrackerPda)(context, {
                    id: args.id,
                    candyMachine: mintContext.candyMachine,
                    candyGuard: mintContext.candyGuard,
                })[0],
                isWritable: true,
            },
        ],
    }),
    routeParser: (context, routeContext, args) => ({
        data: new Uint8Array(),
        remainingAccounts: [
            {
                isWritable: true,
                publicKey: (0, generated_1.findAllocationTrackerPda)(context, {
                    id: args.id,
                    candyMachine: routeContext.candyMachine,
                    candyGuard: routeContext.candyGuard,
                })[0],
            },
            { isWritable: false, signer: args.candyGuardAuthority },
            { isWritable: false, publicKey: (0, mpl_toolbox_1.getSplSystemProgramId)(context) },
        ],
    }),
};
//# sourceMappingURL=allocation.js.map