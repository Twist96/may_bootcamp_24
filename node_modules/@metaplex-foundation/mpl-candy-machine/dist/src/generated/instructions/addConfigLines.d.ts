/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
import { ConfigLine, ConfigLineArgs } from '../types';
export declare type AddConfigLinesInstructionAccounts = {
    /** Candy Machine account. */
    candyMachine: PublicKey | Pda;
    /** Autority of the candy machine. */
    authority?: Signer;
};
export declare type AddConfigLinesInstructionData = {
    discriminator: Array<number>;
    index: number;
    configLines: Array<ConfigLine>;
};
export declare type AddConfigLinesInstructionDataArgs = {
    index: number;
    configLines: Array<ConfigLineArgs>;
};
export declare function getAddConfigLinesInstructionDataSerializer(): Serializer<AddConfigLinesInstructionDataArgs, AddConfigLinesInstructionData>;
export declare type AddConfigLinesInstructionArgs = AddConfigLinesInstructionDataArgs;
export declare function addConfigLines(context: Pick<Context, 'identity' | 'programs'>, input: AddConfigLinesInstructionAccounts & AddConfigLinesInstructionArgs): TransactionBuilder;
