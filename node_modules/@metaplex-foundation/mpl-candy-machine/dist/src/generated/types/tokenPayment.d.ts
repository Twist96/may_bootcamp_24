/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { PublicKey } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
/**
 * Guard that charges an amount in a specified spl-token as payment for the mint.
 *
 * List of accounts required:
 *
 * 0. `[writable]` Token account holding the required amount.
 * 1. `[writable]` Address of the ATA to receive the tokens.
 */
export declare type TokenPayment = {
    amount: bigint;
    mint: PublicKey;
    destinationAta: PublicKey;
};
export declare type TokenPaymentArgs = {
    amount: number | bigint;
    mint: PublicKey;
    destinationAta: PublicKey;
};
export declare function getTokenPaymentSerializer(): Serializer<TokenPaymentArgs, TokenPayment>;
