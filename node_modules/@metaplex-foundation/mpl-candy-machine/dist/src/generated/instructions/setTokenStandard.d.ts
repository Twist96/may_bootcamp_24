/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
import { TokenStandard, TokenStandardArgs } from '@metaplex-foundation/mpl-token-metadata';
import { Context, Pda, PublicKey, Signer, TransactionBuilder } from '@metaplex-foundation/umi';
import { Serializer } from '@metaplex-foundation/umi/serializers';
export declare type SetTokenStandardInstructionAccounts = {
    /** Candy Machine account. */
    candyMachine: PublicKey | Pda;
    /** Candy Machine authority. */
    authority?: Signer;
    /**
     * Authority PDA.
     *
     */
    authorityPda?: PublicKey | Pda;
    /** Payer of the transaction. */
    payer?: Signer;
    /**
     * Authorization rule set to be used by minted NFTs.
     *
     */
    ruleSet?: PublicKey | Pda;
    /**
     * Collection metadata delegate record.
     *
     */
    collectionDelegateRecord?: PublicKey | Pda;
    /**
     * Collection mint.
     *
     */
    collectionMint: PublicKey | Pda;
    /**
     * Collection metadata.
     *
     */
    collectionMetadata?: PublicKey | Pda;
    /**
     * Collection authority record.
     *
     */
    collectionAuthorityRecord?: PublicKey | Pda;
    /** Collection update authority. */
    collectionUpdateAuthority: Signer;
    /**
     * Token Metadata program.
     *
     */
    tokenMetadataProgram?: PublicKey | Pda;
    /** System program. */
    systemProgram?: PublicKey | Pda;
    /**
     * Instructions sysvar account.
     *
     */
    sysvarInstructions?: PublicKey | Pda;
    /**
     * Token Authorization Rules program.
     *
     */
    authorizationRulesProgram?: PublicKey | Pda;
    /**
     * Token Authorization rules account for the collection metadata (if any).
     *
     */
    authorizationRules?: PublicKey | Pda;
};
export declare type SetTokenStandardInstructionData = {
    discriminator: Array<number>;
    tokenStandard: TokenStandard;
};
export declare type SetTokenStandardInstructionDataArgs = {
    tokenStandard: TokenStandardArgs;
};
export declare function getSetTokenStandardInstructionDataSerializer(): Serializer<SetTokenStandardInstructionDataArgs, SetTokenStandardInstructionData>;
export declare type SetTokenStandardInstructionArgs = SetTokenStandardInstructionDataArgs;
export declare function setTokenStandard(context: Pick<Context, 'eddsa' | 'identity' | 'payer' | 'programs'>, input: SetTokenStandardInstructionAccounts & SetTokenStandardInstructionArgs): TransactionBuilder;
