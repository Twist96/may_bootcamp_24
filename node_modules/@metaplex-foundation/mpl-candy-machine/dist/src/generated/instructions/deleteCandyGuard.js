"use strict";
/**
 * This code was AUTOGENERATED using the kinobi library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun kinobi to update it.
 *
 * @see https://github.com/metaplex-foundation/kinobi
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.deleteCandyGuard = exports.getDeleteCandyGuardInstructionDataSerializer = void 0;
const umi_1 = require("@metaplex-foundation/umi");
const serializers_1 = require("@metaplex-foundation/umi/serializers");
const shared_1 = require("../shared");
function getDeleteCandyGuardInstructionDataSerializer() {
    return (0, serializers_1.mapSerializer)((0, serializers_1.struct)([['discriminator', (0, serializers_1.array)((0, serializers_1.u8)(), { size: 8 })]], { description: 'DeleteCandyGuardInstructionData' }), (value) => ({
        ...value,
        discriminator: [183, 18, 70, 156, 148, 109, 161, 34],
    }));
}
exports.getDeleteCandyGuardInstructionDataSerializer = getDeleteCandyGuardInstructionDataSerializer;
// Instruction.
function deleteCandyGuard(context, input) {
    // Program ID.
    const programId = context.programs.getPublicKey('mplCandyGuard', 'Guard1JwRhJkVH6XZhzoYxeBVQe872VH6QggF4BWmS9g');
    // Accounts.
    const resolvedAccounts = {
        candyGuard: { index: 0, isWritable: true, value: input.candyGuard ?? null },
        authority: { index: 1, isWritable: true, value: input.authority ?? null },
    };
    // Default values.
    if (!resolvedAccounts.authority.value) {
        resolvedAccounts.authority.value = context.identity;
    }
    // Accounts in order.
    const orderedAccounts = Object.values(resolvedAccounts).sort((a, b) => a.index - b.index);
    // Keys and Signers.
    const [keys, signers] = (0, shared_1.getAccountMetasAndSigners)(orderedAccounts, 'programId', programId);
    // Data.
    const data = getDeleteCandyGuardInstructionDataSerializer().serialize({});
    // Bytes Created On Chain.
    const bytesCreatedOnChain = 0;
    return (0, umi_1.transactionBuilder)([
        { instruction: { keys, programId, data }, signers, bytesCreatedOnChain },
    ]);
}
exports.deleteCandyGuard = deleteCandyGuard;
//# sourceMappingURL=deleteCandyGuard.js.map